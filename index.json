{"hugo":{"BuildDate":"2020-01-05T18:57:23Z","CommitHash":"83e50184","Environment":"production","Version":"0.62.2"},"pages":[{"Aliases":null,"File":{"BaseFileName":"index","ContentBaseName":"msckf","Dir":"blog/msckf/","Ext":"md","Lang":"en","LogicalName":"index.md","Path":"blog/msckf/index.md","TranslationBaseName":"index","UniqueID":"1b90e5694d8ae8fe6d5ab37e58dd41c5"},"FuzzyWordCount":700,"GitInfo":null,"Kind":"page","Lastmod":"2020-01-03T08:00:00+08:00","Len":6610,"Name":"MSCKF","Permalink":"https://nuhuo08.github.io/msckf/","Plain":"QR分解 \\[ A_{2m \\times 3} = Q_{2m \\times 2m}R_{2m \\times 3} = \\begin{bmatrix} B_{2m \\times 3} \u0026C_{2m \\times (2m - 3)} \\end{bmatrix} \\begin{bmatrix} D_{3 \\times 3} \\\\ 0_{(2m - 3) \\times 3} \\end{bmatrix} \\]\n其中，\\(Q\\) 为正交矩阵，每一列代表一个基向量，与除了自身以外的其他基向量的点积都为0。Where \\(B\\) and \\(C\\) are unitary matrices whose columns form bases for the range and nullspace of \\(A\\).\n\\[ {C^T}_{(2m-3) * 2m} A_{2m \\times 3} = \\begin{bmatrix} 0_{(2m-3) \\times 3} \u0026I_{(2m-3) \\times (2m - 3)} \\end{bmatrix} \\begin{bmatrix} D_{3 \\times 3} \\\\ 0_{(2m - 3) \\times 3} \\end{bmatrix} = 0_{(2m-3) \\times 3} \\]\n\\(C\\)称为\\(A\\)的左零空间，当左乘\\(C^T\\)以后，整个矩阵都变为0。\n\\[ {B^T}_{3 * 2m} A_{2m \\times 3} = \\begin{bmatrix} I_{3 \\times 3} \u00260_{3 \\times (2m - 3)} \\end{bmatrix} \\begin{bmatrix} D_{3 \\times 3} \\\\ 0_{(2m - 3) \\times 3} \\end{bmatrix} = D_{3 \\times 3} \\]\n当左乘\\(B^T\\)以后，仅重要信息被保留下来为\\(D\\)\n状态量 当前IMU状态\\(15\\)维，加上滑窗内\\(N\\)帧图像，每个相机位姿6维，共计\\(15+6N\\)\n\\[ {\\hat{X}}_k = \\begin{bmatrix} ^I_G\\bar{q} \\\\ {b_g} \\\\ {^Gv_I} \\\\ {b_a} \\\\ {^Gp_I} \\\\ {^{C_1}_G\\hat{\\bar{q}}} \\\\ ^G\\hat{p}_{C_1} \\\\ \\vdots \\\\ {^{C_N}_G\\hat{\\bar{q}}} \\\\ ^G\\hat{p}_{C_N} \\end{bmatrix} \\]\n状态增广 当增加第\\(N+1\\)个新的相机位姿时，状态向量需要增广。\n\\[ \\begin{bmatrix} ^I_G\\bar{q}^T \\\\ {b_g}^T \\\\ {^Gv_I}^T \\\\ {b_a}^T \\\\ {^Gp_I}^T \\\\ {^{C_1}_G\\hat{\\bar{q}}}^T \\\\ ^G\\hat{p}_{C_1}^T \\\\ \\vdots \\\\ {^{C_N}_G\\hat{\\bar{q}}}^T \\\\ ^G\\hat{p}_{C_N}^T \\\\ {^{C_{N+1}}_G\\hat{\\bar{q}}}^T \\\\ ^G\\hat{p}_{C_{N+1}}^T \\end{bmatrix} = \\underbrace{\\begin{bmatrix} I \u00260 \u00260 \u00260 \u00260 \u00260 \u00260 \u0026\\cdots \u00260 \u00260\\\\ 0 \u0026I \u00260 \u00260 \u00260 \u00260 \u00260 \u0026\\cdots \u00260 \u00260\\\\ 0 \u00260 \u0026I \u00260 \u00260 \u00260 \u00260 \u0026\\cdots \u00260 \u00260\\\\ 0 \u00260 \u00260 \u0026I \u00260 \u00260 \u00260 \u0026\\cdots \u00260 \u00260\\\\ 0 \u00260 \u00260 \u00260 \u0026I \u00260 \u00260 \u0026\\cdots \u00260 \u00260\\\\ 0 \u00260 \u00260 \u00260 \u00260 \u0026I \u00260 \u0026\\cdots \u00260 \u00260\\\\ 0 \u00260 \u00260 \u00260 \u00260 \u00260 \u0026I \u0026\\cdots \u00260 \u00260\\\\ \u0026 \u0026 \u0026 \u0026\\vdots \\\\ 0 \u00260 \u00260 \u00260 \u00260 \u00260 \u00260 \u0026\\cdots \u0026I \u00260\\\\ 0 \u00260 \u00260 \u00260 \u00260 \u00260 \u00260 \u0026\\cdots \u00260 \u0026I\\\\ C(^C_I\\bar{q}) \u0026 0 \u0026 0 \u0026 0 \u0026 0 \u0026 0 \u0026 0 \u0026\\cdots \u00260 \u00260 \\\\ \\lfloor C_{\\hat{q}}^T p_C \\times \\rfloor \u00260 \u00260 \u0026 0 \u0026I \u00260 \u00260 \u0026\\cdots \u00260 \u00260 \\end{bmatrix}}_A * \\begin{bmatrix} ^I_G\\bar{q}^T \\\\ {b_g}^T \\\\ {^Gv_I}^T \\\\ {b_a}^T \\\\ {^Gp_I}^T \\\\ {^{C_1}_G\\hat{\\bar{q}}}^T \\\\ ^G\\hat{p}_{C_1}^T \\\\ \\vdots \\\\ {^{C_N}_G\\hat{\\bar{q}}}^T \\\\ ^G\\hat{p}_{C_N}^T \\end{bmatrix} \\]\n对应的协方差矩阵也需要进行传播。 \\( P_{k|k} = A P_{k|k} A^T \\)\n多余的话\n关于协方差增广，可以与 slam for dummies 进行对比学习。在该文中，新的特征点与当前的机器人位姿、激光观测量都有关系，其协方差为：\n\\[ P^{N+1 \\ N+1} = J_{xr} P J_{xr}^T + J_z R J_z^T \\]\n三角化点 将相机坐标当作已知值，优化共同观测到的某个特征点坐标\n\\[ h = \\begin{pmatrix} h_0 \\\\ h_1 \\\\ h_2 \\end{pmatrix} = R \\begin{pmatrix} \\frac{X}{Z} \\\\ \\frac{Y}{Z} \\\\ 1 \\end{pmatrix} + \\frac{1}{Z} t = R \\begin{pmatrix} \\alpha \\\\ \\beta \\\\ 1 \\end{pmatrix} + \\rho t \\\\ z = \\begin{pmatrix} \\frac{h_0}{h_2} \\\\ \\frac{h_1}{h_2} \\end{pmatrix} \\]\n由此得到雅可比矩阵：\n\\[ J = \\frac{\\partial e_i}{\\partial(\\alpha, \\beta, \\rho)} = -\\frac{\\partial z}{\\partial h} \\begin{bmatrix} \\frac{\\partial h}{\\partial \\alpha} \u0026 \\frac{\\partial h}{\\partial \\beta} \u0026 \\frac{\\partial h}{\\partial \\rho} \\end{bmatrix} \\\\ = -\\begin{bmatrix} \\frac{1}{h_2} \u0026 0 \u0026 -\\frac{h_0}{h_2^2} \\\\ 0 \u0026 \\frac{1}{h_2} \u0026 -\\frac{h_1}{h_2^2} \\end{bmatrix} \\begin{bmatrix} R\\begin{pmatrix} 1 \\\\ 0 \\\\ 0 \\end{pmatrix} \u0026 R\\begin{pmatrix} 0 \\\\ 1 \\\\ 0 \\end{pmatrix} \u0026 t \\end{bmatrix} \\\\ \\]\n观测模型 特征点坐标是根据相机坐标计算出来的，而观测量误差同时与特征点和相机的坐标误差相关。\n\\[ ^{C_i} p_j = \\begin{bmatrix} ^{C_i} \\hat X_j \\\\ ^{C_i} \\hat Y_j \\\\ ^{C_i} \\hat Z_j \\end{bmatrix} =C(^{C_i} _G \\hat q)(^G \\hat p _{j} - ^G \\hat p _{C_i}) \\\\ \\hat z_i^{(j)} = \\begin{bmatrix} \\frac{^{C_i} \\hat X_j}{^{C_i} \\hat Z_j} \\\\ \\frac{^{C_i} \\hat Y_j}{^{C_i} \\hat Z_j} \\end{bmatrix} \\]\n对相机位姿、特征点位置的误差求雅可比：\n\\[ r_i^{(j)} \\approx \\frac{\\partial z_i^{(j)}}{\\partial ^{C_i} p_j} \\frac{\\partial ^{C_i} p_j}{\\partial X_{C_i}} \\tilde X + \\frac{\\partial z_i^{(j)}}{\\partial ^{C_i} p_j} \\frac{\\partial ^{C_i} p_j}{\\partial ^Gp_j} {^G}{\\tilde{p}_{j}} \\\\ = \\begin{bmatrix} \\frac{1}{^{C_i} \\hat Z_j} \u0026 0 \u0026 -\\frac{^{C_i} \\hat X_j}{^{C_i} \\hat Z_j} \\\\ 0 \u0026 \\frac{1}{^{C_i} \\hat Z_j} \u0026 -\\frac{^{C_i} \\hat Y_j}{^{C_i} \\hat Z_j} \\end{bmatrix} \\begin{bmatrix} \\lfloor {^{C_i} \\hat p _{j}}_\\times \\rfloor \u0026 -C(^{C_i} _G \\hat q) \\end{bmatrix} \\tilde X + \\begin{bmatrix} \\frac{1}{^{C_i} \\hat Z_j} \u0026 0 \u0026 -\\frac{^{C_i} \\hat X_j}{^{C_i} \\hat Z_j} \\\\ 0 \u0026 \\frac{1}{^{C_i} \\hat Z_j} \u0026 -\\frac{^{C_i} \\hat Y_j}{^{C_i} \\hat Z_j} \\end{bmatrix} \\begin{bmatrix} C(^{C_i} _G \\hat q) \\end{bmatrix} {^G}{\\tilde{p}_{j}} \\]\n精华：将观测到该特征点的多个相机观测值累积到一起形成大型矩阵，并将观测量误差投影到相机坐标误差雅可比矩阵的左零空间中，消去特征点坐标误差。由此，观测量误差仅与相机坐标误差相关！\n\\[ r^{(j)} \\simeq H_X^{(j)} \\tilde{X} + H_f^{(j)} {^G}{\\tilde{p}_{f_j}} + n^{(j)} \\\\ r_o^{(j)} = A^T r^{(j)} \\simeq A^T H_X^{(j)} \\tilde{X} + A^Tn^{(j)} = H_o^{(j)} \\tilde{X} ^{(j)} + n_o^{(j)} \\]\n滤波更新 使用QR分解，仅保留观测值中的有效信息。\n\\[ r_o = \\begin{bmatrix} Q_1 \u0026Q_2 \\end{bmatrix} \\begin{bmatrix} T_H \\\\ 0 \\end{bmatrix} \\tilde{X} + n_o \\\\ r_n = Q_1^Tr_o = T_H \\tilde{X} + n_n \\]\n","PublishDate":"2020-01-03T08:00:00+08:00","ReadingTime":4,"RelPermalink":"/msckf/","Section":"blog","Stat":{"IsDir":false,"ModTime":"2020-01-25T22:27:26.394866838+08:00","Mode":436,"Name":"index.md","Size":5665},"Tags":null,"Title":"MSCKF","Type":"blog","Weight":0,"WordCount":669},{"Aliases":null,"File":{"BaseFileName":"index","ContentBaseName":"amcl","Dir":"blog/amcl/","Ext":"md","Lang":"en","LogicalName":"index.md","Path":"blog/amcl/index.md","TranslationBaseName":"index","UniqueID":"71cc57c5539d74bcf374be08f7f36f11"},"FuzzyWordCount":200,"GitInfo":{"hash":"18e92a3feff54bd6afcfac3ff7e4ee50992f8c6d","abbreviatedHash":"18e92a3","subject":"add amcl page","authorName":"nuhuo08","authorEmail":"845776955@qq.com","authorDate":"2020-01-25T18:24:08+08:00","commitDate":"2020-01-25T18:24:08+08:00"},"Kind":"page","Lastmod":"2020-01-25T18:24:08+08:00","Len":5231,"Name":"AMCL Localization","Permalink":"https://nuhuo08.github.io/amcl/","Plain":"粒子聚类 对外输出的机器人状态不应该是某一个最好的粒子，因为很有可能某些粒子的值都非常接近，可能会引起频繁的粒子切换，导致输出的结果来回跳变。\n基于此考虑， 应该对相似的粒子进行聚类。将最好的那一簇粒子的统计状态作为输出的机器人状态。\nKD-Tree 当涉及到距离查找时，作为算法工程师，我们应该首先想到KD-Tree。树的叶子节点是每一个粒子，而非叶子节点则保存的是该节点的分叉判断的标准，小于此分叉判断标准的在左边，大于此分叉标准的在右边。\n查询的基本思路：首先通过二叉树搜索（比较待查询节点和分裂节点的分裂维的值，小于等于就进入左子树分支，等于就进入右子树分支直到叶子结点），顺着“搜索路径”很快能找到最近邻的近似点，也就是与待查询点处于同一个子空间的叶子结点；然后再回溯搜索路径，并判断搜索路径上的结点的其他子结点空间中是否可能有距离查询点更近的数据点，如果有可能，则需要跳到其他子结点空间中去搜索（将其他子结点加入到搜索路径）。重复这个过程直到搜索路径为空。\n     聚类 循环遍历每一个叶子节点，在叶子节点周围的 +-1 范围内的粒子都归为一类。例如在AMCL中，每个粒子周围27个粒子若有相连的，就将它们全部连成一片，形成一簇粒子。\n粒子滤波改进 为了防止机器人被绑架，出现粒子收敛于某一错误的地方，需要进行粒子滤波的改良。\n粒子注入 我们来考虑如下的式子：\n$$ x_1 = x + 0.1(y-x) $$ $$ x_2 = x + 0.9(y-x) $$\n对于上面两个式子，展开以后我们可以发现：$x_1$ 主要受到 $x$ 的影响，而 $x_2$ 主要受到 $y$ 的影响。若粒子收敛于正确的状态，则 $y$ 是准确的，$x_2$ 将会比 $x_1$ 更大，此时不需要注入粒子。若粒子收敛于错误的地方，则 $y$ 不准确，此时 $x_1$ 受到 $y$ 的影响较小，$x_1$ 更准确，此时便需要注入粒子。\n而这正是AMCL里面slow和fast参数产生的效果。\nKLD自适应 KLD的计算属于数理统计的知识，可参考论文1。这里进行直观的解释。\n例如，某一粒子权值很大。当我们进行100次采样，可能都采样到的是同一个粒子，此时粒子的个数始终保持为1。而KLD计算出来的需要采样的次数，是粒子个数的函数。因此，当粒子数保持为1时，KLD计算出来的次数为某一定值，而采样次数持续在增加，到某一时间点，便超过了需要的采样次数。\n而当粒子权值都接近时，假设我们采样了100次，每次采样出来的粒子都不同，此时粒子的个数一直增长到100。此时的KLD也随着粒子的个数增长到一个比较大的值。采样的次数虽然持续增加，但是始终超过不了KDL计算出来的次数。此种情况下采样仍将继续。\n距离计算 计算每个粒子的权重时，我们需要计算观测到的障碍物与地图中的障碍物的距离差异。差异越大，权值越小。当某次观测的障碍物全部与地图上的障碍物匹配上了，则差异为0，权值极大。因此，在地图的初始阶段，我们需要计算地图上任一点位置到最近障碍物的距离。这就是似然场模型。\n直接计算 遍历每一个点，计算每一个点到每个障碍物的距离并取最小值。此方法进行了重复计算，效率较低。\n高效算法 从障碍物出发，向外膨胀一个单位。当所有障碍物膨胀完以后，从膨胀出来的地方出发，继续向外膨胀一个单位。此方法没有冗余计算，且实现的代码简洁。\nAMCL参数解读 min_particles / max_particles / kld_err / kld_z : 用来限制粒子数量\nupdate_min_d / update_min_a / resample_interval : 限制冲采样条件\nrecovery_alpha_slow / recovery_alpha_fast : 动态调整粒子数量\ninitial_pose_xya / initial_cov_xxyyaa : 初始位置及其协方差\nodom_alpha1234 : 里程计运动模型误差系数\n参考资料 http://www.robots.ox.ac.uk/~cvrg/hilary2005/adaptive.pdf\nhttps://blog.csdn.net/Mark_SLAM/article/details/81266527\nhttps://zhuanlan.zhihu.com/p/28137335\nhttps://zhuanlan.zhihu.com/p/59411695\nhttps://zhuanlan.zhihu.com/p/59663340\nhttps://zhuanlan.zhihu.com/p/61908381\nudacity robot\ngithub particle filter\n","PublishDate":"2020-01-02T08:00:00+08:00","ReadingTime":1,"RelPermalink":"/amcl/","Section":"blog","Stat":{"IsDir":false,"ModTime":"2020-01-25T18:15:35.941269304+08:00","Mode":436,"Name":"index.md","Size":4694},"Tags":null,"Title":"AMCL Localization","Type":"blog","Weight":0,"WordCount":102},{"Aliases":null,"File":{"BaseFileName":"index","ContentBaseName":"hugo-website","Dir":"blog/hugo-website/","Ext":"md","Lang":"en","LogicalName":"index.md","Path":"blog/hugo-website/index.md","TranslationBaseName":"index","UniqueID":"08d10ed3d87b41b34d3e307006faa647"},"FuzzyWordCount":200,"GitInfo":{"hash":"d5bbb7eafe717b8f0f0ca5f44d2adc94fe2acb7f","abbreviatedHash":"d5bbb7e","subject":"1. add about page 2. add hugo-website page 3. add homepage","authorName":"nuhuo08","authorEmail":"845776955@qq.com","authorDate":"2020-01-25T14:45:57+08:00","commitDate":"2020-01-25T14:45:57+08:00"},"Kind":"page","Lastmod":"2020-01-25T14:45:57+08:00","Len":2772,"Name":"Hugo搭建个人网站","Permalink":"https://nuhuo08.github.io/hugo-website/","Plain":"申请Github账号 Github私人博客仓库 新建Hugo_Blogs仓库，此仓库保存个人的markdown源文件等。可设置为private仓库。\nGithub Pages 新建username.github.io的仓库，此仓库保存Hugo生成出来的html文件等。https://username.github.io/即为最终的个人博客地址。必须设置为public仓库。\n安装Hugo Hugo Tutorial\nBinary Package\n新建私人博客文件夹 创建网站文件夹 新建网站文件夹，并用hugo生成基本网站文件\nmkdir MyWebsite \u0026amp;\u0026amp; cd MyWebsite hugo new site . 链接Github私人博客仓库 添加git源，保存私人的markdown源文件\ngit init git remote add origin https://github.com/username/Hugo_Blogs.git 添加并使用新的theme git submodule add https://github.com/nuhuo08/uswds-hugo-theme.git themes/uswds-hugo-theme git submodule update --remote --merge cp themes/uswds-hugo-theme/exampleSite/config.yaml . 编辑网页 链接Github Pages 为了能够使用git submodule，需要先在仓库里添加点文件，之后再把它删掉。\nmkdir public \u0026amp;\u0026amp; cd public \u0026amp;\u0026amp; touch abc git remote add origin https://github.com/username/username.github.io.git git add . git commit -m \u0026quot;abc\u0026quot; git push orign master cd .. \u0026amp;\u0026amp; rm -rf public 然后再添加submodule，继续进行下一步。\ncd MyWebsite git submodule add https://github.com/username/username.github.io.git public 创建第一个网页 mkdir content/blog vi content/blog/my-first-blog.md 生成并本机预览网页 hugo hugo server -D 将改动上传至2个Git仓库 发布网页 hugo # if using a theme, replace with `hugo -t \u0026lt;YOURTHEME\u0026gt;` cd MyWebsite/public git add . git commit git push origin master 保存私人博客源文件 cd MyWebsite git add . git commit git push origin master ","PublishDate":"2020-01-01T08:00:00+08:00","ReadingTime":1,"RelPermalink":"/hugo-website/","Section":"blog","Stat":{"IsDir":false,"ModTime":"2020-01-25T18:21:07.573242872+08:00","Mode":436,"Name":"index.md","Size":2061},"Tags":null,"Title":"Hugo搭建个人网站","Type":"blog","Weight":0,"WordCount":135},{"Aliases":null,"File":{"BaseFileName":"index","ContentBaseName":"about","Dir":"about/","Ext":"md","Lang":"en","LogicalName":"index.md","Path":"about/index.md","TranslationBaseName":"index","UniqueID":"8576ec274c98b3831668a172fa632d80"},"FuzzyWordCount":100,"GitInfo":{"hash":"18e92a3feff54bd6afcfac3ff7e4ee50992f8c6d","abbreviatedHash":"18e92a3","subject":"add amcl page","authorName":"nuhuo08","authorEmail":"845776955@qq.com","authorDate":"2020-01-25T18:24:08+08:00","commitDate":"2020-01-25T18:24:08+08:00"},"Kind":"page","Lastmod":"2020-01-25T18:24:08+08:00","Len":850,"Name":"About","Permalink":"https://nuhuo08.github.io/about/","Plain":"转眼已2020年，自己马上也要30了。三十而立，却一直没有可见的成绩。见过很多优秀的人，对自己的无所作为愈加愤怒。\n昨天晚上重读中央文献出版社的《毛泽东传》，看到这样一句话：\n\r\r毛泽东第一次进入中国共产党的领导核心，这时他三十岁，刚好是“而立”之年。\r\r慢慢的开始接受自己的平凡。不过，虽身不能至，然心向往之。从今天开始整理自己的私人网站，总结以前学过的各种知识， 记录自己的生活点滴与感悟，权当作一点点慰藉吧。\n\r\rTo learn, read; To know, write; To master, teach.\r\r做一点事，发一点光，写一点博客，找一点意义。\n","PublishDate":"2020-01-01T00:00:00Z","ReadingTime":1,"RelPermalink":"/about/","Section":"","Stat":{"IsDir":false,"ModTime":"2020-01-25T18:17:10.045246994+08:00","Mode":436,"Name":"index.md","Size":855},"Tags":null,"Title":"About","Type":"page","Weight":0,"WordCount":15}],"site":{"BaseURL":"https://nuhuo08.github.io","IsMultiLingual":false,"IsServer":false,"Language":{"Lang":"en","LanguageName":"","Title":"","Weight":0,"Disabled":false,"ContentDir":"","Cfg":{}},"LastChange":"2020-01-25T18:24:08+08:00","RSSLink":"https://nuhuo08.github.io/index.xml","Title":"XiaoWu"}}
